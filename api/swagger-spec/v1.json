{
  "swaggerVersion": "1.2",
  "apiVersion": "v1",
  "basePath": "https://10.10.10.10:6443",
  "resourcePath": "/api/v1",
  "apis": [
   {
    "path": "/api/v1/namespaces/{namespace}/bindings",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Binding",
      "method": "POST",
      "summary": "create a Binding",
      "nickname": "createNamespacedBinding",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Binding",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Binding"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/componentstatuses",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ComponentStatusList",
      "method": "GET",
      "summary": "list objects of kind ComponentStatus",
      "nickname": "listNamespacedComponentStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ComponentStatusList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/componentstatuses/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ComponentStatus",
      "method": "GET",
      "summary": "read the specified ComponentStatus",
      "nickname": "readNamespacedComponentStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ComponentStatus",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ComponentStatus"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/componentstatuses",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ComponentStatusList",
      "method": "GET",
      "summary": "list objects of kind ComponentStatus",
      "nickname": "listComponentStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ComponentStatusList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/endpoints",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.EndpointsList",
      "method": "GET",
      "summary": "list or watch objects of kind Endpoints",
      "nickname": "listNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.EndpointsList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Endpoints",
      "method": "POST",
      "summary": "create a Endpoints",
      "nickname": "createNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Endpoints",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Endpoints"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/endpoints",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Endpoints",
      "nickname": "watchNamespacedEndpointsList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/endpoints/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Endpoints",
      "method": "GET",
      "summary": "read the specified Endpoints",
      "nickname": "readNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Endpoints",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Endpoints"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Endpoints",
      "method": "PUT",
      "summary": "replace the specified Endpoints",
      "nickname": "replaceNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Endpoints",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Endpoints",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Endpoints"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Endpoints",
      "method": "PATCH",
      "summary": "partially update the specified Endpoints",
      "nickname": "patchNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Endpoints",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Endpoints"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Endpoints",
      "nickname": "deleteNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Endpoints",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/endpoints/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Endpoints",
      "nickname": "watchNamespacedEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Endpoints",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/endpoints",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.EndpointsList",
      "method": "GET",
      "summary": "list or watch objects of kind Endpoints",
      "nickname": "listEndpoints",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.EndpointsList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/endpoints",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Endpoints",
      "nickname": "watchEndpointsList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/events",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.EventList",
      "method": "GET",
      "summary": "list or watch objects of kind Event",
      "nickname": "listNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.EventList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Event",
      "method": "POST",
      "summary": "create a Event",
      "nickname": "createNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Event",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/events",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Event",
      "nickname": "watchNamespacedEventList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/events/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Event",
      "method": "GET",
      "summary": "read the specified Event",
      "nickname": "readNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Event",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Event",
      "method": "PUT",
      "summary": "replace the specified Event",
      "nickname": "replaceNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Event",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Event",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Event",
      "method": "PATCH",
      "summary": "partially update the specified Event",
      "nickname": "patchNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Event",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Event"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Event",
      "nickname": "deleteNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Event",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/events/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Event",
      "nickname": "watchNamespacedEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Event",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/events",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.EventList",
      "method": "GET",
      "summary": "list or watch objects of kind Event",
      "nickname": "listEvent",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.EventList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/events",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Event",
      "nickname": "watchEventList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/limitranges",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.LimitRangeList",
      "method": "GET",
      "summary": "list or watch objects of kind LimitRange",
      "nickname": "listNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRangeList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.LimitRange",
      "method": "POST",
      "summary": "create a LimitRange",
      "nickname": "createNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.LimitRange",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRange"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/limitranges",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of LimitRange",
      "nickname": "watchNamespacedLimitRangeList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/limitranges/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.LimitRange",
      "method": "GET",
      "summary": "read the specified LimitRange",
      "nickname": "readNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the LimitRange",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRange"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.LimitRange",
      "method": "PUT",
      "summary": "replace the specified LimitRange",
      "nickname": "replaceNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.LimitRange",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the LimitRange",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRange"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.LimitRange",
      "method": "PATCH",
      "summary": "partially update the specified LimitRange",
      "nickname": "patchNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the LimitRange",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRange"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a LimitRange",
      "nickname": "deleteNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the LimitRange",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/limitranges/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind LimitRange",
      "nickname": "watchNamespacedLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the LimitRange",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/limitranges",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.LimitRangeList",
      "method": "GET",
      "summary": "list or watch objects of kind LimitRange",
      "nickname": "listLimitRange",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.LimitRangeList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/limitranges",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of LimitRange",
      "nickname": "watchLimitRangeList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.NamespaceList",
      "method": "GET",
      "summary": "list or watch objects of kind Namespace",
      "nickname": "listNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.NamespaceList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Namespace",
      "method": "POST",
      "summary": "create a Namespace",
      "nickname": "createNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Namespace",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Namespace",
      "nickname": "watchNamespacedNamespaceList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Namespace",
      "method": "GET",
      "summary": "read the specified Namespace",
      "nickname": "readNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Namespace",
      "method": "PUT",
      "summary": "replace the specified Namespace",
      "nickname": "replaceNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Namespace",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Namespace",
      "method": "PATCH",
      "summary": "partially update the specified Namespace",
      "nickname": "patchNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Namespace",
      "nickname": "deleteNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Namespace",
      "nickname": "watchNamespacedNamespace",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{name}/finalize",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Namespace",
      "method": "PUT",
      "summary": "replace finalize of the specified Namespace",
      "nickname": "replaceNamespacedNamespaceFinalize",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Namespace",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Namespace",
      "method": "PUT",
      "summary": "replace status of the specified Namespace",
      "nickname": "replaceNamespacedNamespaceStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Namespace",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Namespace",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Namespace"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/nodes",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.NodeList",
      "method": "GET",
      "summary": "list or watch objects of kind Node",
      "nickname": "listNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.NodeList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Node",
      "method": "POST",
      "summary": "create a Node",
      "nickname": "createNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Node",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Node"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/nodes",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Node",
      "nickname": "watchNamespacedNodeList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/nodes/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Node",
      "method": "GET",
      "summary": "read the specified Node",
      "nickname": "readNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Node"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Node",
      "method": "PUT",
      "summary": "replace the specified Node",
      "nickname": "replaceNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Node",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Node"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Node",
      "method": "PATCH",
      "summary": "partially update the specified Node",
      "nickname": "patchNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Node"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Node",
      "nickname": "deleteNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/nodes/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Node",
      "nickname": "watchNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/nodes/{name}/{path:*}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Node",
      "nickname": "proxyGETNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Node",
      "nickname": "proxyPUTNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Node",
      "nickname": "proxyPOSTNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Node",
      "nickname": "proxyDELETENamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Node",
      "nickname": "proxyHEADNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Node",
      "nickname": "proxyOPTIONSNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/nodes/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Node",
      "nickname": "proxyGETNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Node",
      "nickname": "proxyPUTNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Node",
      "nickname": "proxyPOSTNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Node",
      "nickname": "proxyDELETENamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Node",
      "nickname": "proxyHEADNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Node",
      "nickname": "proxyOPTIONSNamespacedNode",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/nodes/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Node",
      "method": "PUT",
      "summary": "replace status of the specified Node",
      "nickname": "replaceNamespacedNodeStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Node",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Node",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Node"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/persistentvolumeclaims",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolumeClaimList",
      "method": "GET",
      "summary": "list or watch objects of kind PersistentVolumeClaim",
      "nickname": "listNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaimList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolumeClaim",
      "method": "POST",
      "summary": "create a PersistentVolumeClaim",
      "nickname": "createNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolumeClaim",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaim"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of PersistentVolumeClaim",
      "nickname": "watchNamespacedPersistentVolumeClaimList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolumeClaim",
      "method": "GET",
      "summary": "read the specified PersistentVolumeClaim",
      "nickname": "readNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaim"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolumeClaim",
      "method": "PUT",
      "summary": "replace the specified PersistentVolumeClaim",
      "nickname": "replaceNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolumeClaim",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaim"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolumeClaim",
      "method": "PATCH",
      "summary": "partially update the specified PersistentVolumeClaim",
      "nickname": "patchNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaim"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a PersistentVolumeClaim",
      "nickname": "deleteNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind PersistentVolumeClaim",
      "nickname": "watchNamespacedPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/persistentvolumeclaims",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolumeClaimList",
      "method": "GET",
      "summary": "list or watch objects of kind PersistentVolumeClaim",
      "nickname": "listPersistentVolumeClaim",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaimList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/persistentvolumeclaims",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of PersistentVolumeClaim",
      "nickname": "watchPersistentVolumeClaimList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolumeClaim",
      "method": "PUT",
      "summary": "replace status of the specified PersistentVolumeClaim",
      "nickname": "replaceNamespacedPersistentVolumeClaimStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolumeClaim",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolumeClaim",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeClaim"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/persistentvolumes",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolumeList",
      "method": "GET",
      "summary": "list or watch objects of kind PersistentVolume",
      "nickname": "listNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolumeList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolume",
      "method": "POST",
      "summary": "create a PersistentVolume",
      "nickname": "createNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolume",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolume"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/persistentvolumes",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of PersistentVolume",
      "nickname": "watchNamespacedPersistentVolumeList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/persistentvolumes/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolume",
      "method": "GET",
      "summary": "read the specified PersistentVolume",
      "nickname": "readNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolume"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolume",
      "method": "PUT",
      "summary": "replace the specified PersistentVolume",
      "nickname": "replaceNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolume",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolume"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PersistentVolume",
      "method": "PATCH",
      "summary": "partially update the specified PersistentVolume",
      "nickname": "patchNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolume"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a PersistentVolume",
      "nickname": "deleteNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/persistentvolumes/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind PersistentVolume",
      "nickname": "watchNamespacedPersistentVolume",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/persistentvolumes/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PersistentVolume",
      "method": "PUT",
      "summary": "replace status of the specified PersistentVolume",
      "nickname": "replaceNamespacedPersistentVolumeStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PersistentVolume",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PersistentVolume",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PersistentVolume"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PodList",
      "method": "GET",
      "summary": "list or watch objects of kind Pod",
      "nickname": "listNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Pod",
      "method": "POST",
      "summary": "create a Pod",
      "nickname": "createNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Pod",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/pods",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Pod",
      "nickname": "watchNamespacedPodList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Pod",
      "method": "GET",
      "summary": "read the specified Pod",
      "nickname": "readNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Pod",
      "method": "PUT",
      "summary": "replace the specified Pod",
      "nickname": "replaceNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Pod",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Pod",
      "method": "PATCH",
      "summary": "partially update the specified Pod",
      "nickname": "patchNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Pod",
      "nickname": "deleteNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/pods/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Pod",
      "nickname": "watchNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/namespaces/{namespace}/pods/{name}/{path:*}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Pod",
      "nickname": "proxyGETNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Pod",
      "nickname": "proxyPUTNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Pod",
      "nickname": "proxyPOSTNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Pod",
      "nickname": "proxyDELETENamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Pod",
      "nickname": "proxyHEADNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Pod",
      "nickname": "proxyOPTIONSNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/namespaces/{namespace}/pods/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Pod",
      "nickname": "proxyGETNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Pod",
      "nickname": "proxyPUTNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Pod",
      "nickname": "proxyPOSTNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Pod",
      "nickname": "proxyDELETENamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Pod",
      "nickname": "proxyHEADNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Pod",
      "nickname": "proxyOPTIONSNamespacedPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/pods",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PodList",
      "method": "GET",
      "summary": "list or watch objects of kind Pod",
      "nickname": "listPod",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/pods",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Pod",
      "nickname": "watchPodList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/attach",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "connect GET requests to attach of Pod",
      "nickname": "connectGetNamespacedPodAttach",
      "parameters": [
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdin",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdout",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stderr",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "tty",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "container",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "connect POST requests to attach of Pod",
      "nickname": "connectPostNamespacedPodAttach",
      "parameters": [
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdin",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdout",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stderr",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "tty",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "container",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/binding",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Binding",
      "method": "POST",
      "summary": "create binding of a Binding",
      "nickname": "createNamespacedBindingBinding",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Binding",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Binding",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Binding"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/exec",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "connect GET requests to exec of Pod",
      "nickname": "connectGetNamespacedPodExec",
      "parameters": [
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdin",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdout",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stderr",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "tty",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "container",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "",
        "paramType": "query",
        "name": "command",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "connect POST requests to exec of Pod",
      "nickname": "connectPostNamespacedPodExec",
      "parameters": [
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdin",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stdout",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "stderr",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "tty",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "container",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "",
        "paramType": "query",
        "name": "command",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/log",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Pod",
      "method": "GET",
      "summary": "read log of the specified Pod",
      "nickname": "readNamespacedPodLog",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "container",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "follow",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "previous",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/portforward",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "connect GET requests to portforward of Pod",
      "nickname": "connectGetNamespacedPodPortforward",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "connect POST requests to portforward of Pod",
      "nickname": "connectPostNamespacedPodPortforward",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/proxy",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "connect GET requests to proxy of Pod",
      "nickname": "connectGetNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "connect POST requests to proxy of Pod",
      "nickname": "connectPostNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "connect PUT requests to proxy of Pod",
      "nickname": "connectPutNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "connect DELETE requests to proxy of Pod",
      "nickname": "connectDeleteNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "connect HEAD requests to proxy of Pod",
      "nickname": "connectHeadNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "connect OPTIONS requests to proxy of Pod",
      "nickname": "connectOptionsNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path:*}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "connect GET requests to proxy of Pod",
      "nickname": "connectGetNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "connect POST requests to proxy of Pod",
      "nickname": "connectPostNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "connect PUT requests to proxy of Pod",
      "nickname": "connectPutNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "connect DELETE requests to proxy of Pod",
      "nickname": "connectDeleteNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "connect HEAD requests to proxy of Pod",
      "nickname": "connectHeadNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "connect OPTIONS requests to proxy of Pod",
      "nickname": "connectOptionsNamespacedPodProxy",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "path",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/pods/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Pod",
      "method": "PUT",
      "summary": "replace status of the specified Pod",
      "nickname": "replaceNamespacedPodStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Pod",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Pod",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Pod"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/podtemplates",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PodTemplateList",
      "method": "GET",
      "summary": "list or watch objects of kind PodTemplate",
      "nickname": "listNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplateList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PodTemplate",
      "method": "POST",
      "summary": "create a PodTemplate",
      "nickname": "createNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PodTemplate",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplate"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/podtemplates",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of PodTemplate",
      "nickname": "watchNamespacedPodTemplateList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/podtemplates/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PodTemplate",
      "method": "GET",
      "summary": "read the specified PodTemplate",
      "nickname": "readNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PodTemplate",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplate"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PodTemplate",
      "method": "PUT",
      "summary": "replace the specified PodTemplate",
      "nickname": "replaceNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.PodTemplate",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PodTemplate",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplate"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.PodTemplate",
      "method": "PATCH",
      "summary": "partially update the specified PodTemplate",
      "nickname": "patchNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PodTemplate",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplate"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a PodTemplate",
      "nickname": "deleteNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PodTemplate",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/podtemplates/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind PodTemplate",
      "nickname": "watchNamespacedPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the PodTemplate",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/podtemplates",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.PodTemplateList",
      "method": "GET",
      "summary": "list or watch objects of kind PodTemplate",
      "nickname": "listPodTemplate",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.PodTemplateList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/podtemplates",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of PodTemplate",
      "nickname": "watchPodTemplateList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/replicationcontrollers",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ReplicationControllerList",
      "method": "GET",
      "summary": "list or watch objects of kind ReplicationController",
      "nickname": "listNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationControllerList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ReplicationController",
      "method": "POST",
      "summary": "create a ReplicationController",
      "nickname": "createNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ReplicationController",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationController"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/replicationcontrollers",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ReplicationController",
      "nickname": "watchNamespacedReplicationControllerList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ReplicationController",
      "method": "GET",
      "summary": "read the specified ReplicationController",
      "nickname": "readNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ReplicationController",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationController"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ReplicationController",
      "method": "PUT",
      "summary": "replace the specified ReplicationController",
      "nickname": "replaceNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ReplicationController",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ReplicationController",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationController"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ReplicationController",
      "method": "PATCH",
      "summary": "partially update the specified ReplicationController",
      "nickname": "patchNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ReplicationController",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationController"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a ReplicationController",
      "nickname": "deleteNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ReplicationController",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind ReplicationController",
      "nickname": "watchNamespacedReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ReplicationController",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/replicationcontrollers",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ReplicationControllerList",
      "method": "GET",
      "summary": "list or watch objects of kind ReplicationController",
      "nickname": "listReplicationController",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ReplicationControllerList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/replicationcontrollers",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ReplicationController",
      "nickname": "watchReplicationControllerList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/resourcequotas",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ResourceQuotaList",
      "method": "GET",
      "summary": "list or watch objects of kind ResourceQuota",
      "nickname": "listNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuotaList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ResourceQuota",
      "method": "POST",
      "summary": "create a ResourceQuota",
      "nickname": "createNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ResourceQuota",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuota"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/resourcequotas",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ResourceQuota",
      "nickname": "watchNamespacedResourceQuotaList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/resourcequotas/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ResourceQuota",
      "method": "GET",
      "summary": "read the specified ResourceQuota",
      "nickname": "readNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuota"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ResourceQuota",
      "method": "PUT",
      "summary": "replace the specified ResourceQuota",
      "nickname": "replaceNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ResourceQuota",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuota"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ResourceQuota",
      "method": "PATCH",
      "summary": "partially update the specified ResourceQuota",
      "nickname": "patchNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuota"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a ResourceQuota",
      "nickname": "deleteNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/resourcequotas/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind ResourceQuota",
      "nickname": "watchNamespacedResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/resourcequotas",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ResourceQuotaList",
      "method": "GET",
      "summary": "list or watch objects of kind ResourceQuota",
      "nickname": "listResourceQuota",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuotaList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/resourcequotas",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ResourceQuota",
      "nickname": "watchResourceQuotaList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/resourcequotas/{name}/status",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ResourceQuota",
      "method": "PUT",
      "summary": "replace status of the specified ResourceQuota",
      "nickname": "replaceNamespacedResourceQuotaStatus",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ResourceQuota",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ResourceQuota",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ResourceQuota"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/secrets",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.SecretList",
      "method": "GET",
      "summary": "list or watch objects of kind Secret",
      "nickname": "listNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.SecretList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Secret",
      "method": "POST",
      "summary": "create a Secret",
      "nickname": "createNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Secret",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Secret"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/secrets",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Secret",
      "nickname": "watchNamespacedSecretList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/secrets/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Secret",
      "method": "GET",
      "summary": "read the specified Secret",
      "nickname": "readNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Secret",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Secret"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Secret",
      "method": "PUT",
      "summary": "replace the specified Secret",
      "nickname": "replaceNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Secret",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Secret",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Secret"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Secret",
      "method": "PATCH",
      "summary": "partially update the specified Secret",
      "nickname": "patchNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Secret",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Secret"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Secret",
      "nickname": "deleteNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Secret",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/secrets/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Secret",
      "nickname": "watchNamespacedSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Secret",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/secrets",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.SecretList",
      "method": "GET",
      "summary": "list or watch objects of kind Secret",
      "nickname": "listSecret",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.SecretList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/secrets",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Secret",
      "nickname": "watchSecretList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/serviceaccounts",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ServiceAccountList",
      "method": "GET",
      "summary": "list or watch objects of kind ServiceAccount",
      "nickname": "listNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccountList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ServiceAccount",
      "method": "POST",
      "summary": "create a ServiceAccount",
      "nickname": "createNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ServiceAccount",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccount"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/serviceaccounts",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ServiceAccount",
      "nickname": "watchNamespacedServiceAccountList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/serviceaccounts/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ServiceAccount",
      "method": "GET",
      "summary": "read the specified ServiceAccount",
      "nickname": "readNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ServiceAccount",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccount"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ServiceAccount",
      "method": "PUT",
      "summary": "replace the specified ServiceAccount",
      "nickname": "replaceNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.ServiceAccount",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ServiceAccount",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccount"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.ServiceAccount",
      "method": "PATCH",
      "summary": "partially update the specified ServiceAccount",
      "nickname": "patchNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ServiceAccount",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccount"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a ServiceAccount",
      "nickname": "deleteNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.DeleteOptions",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ServiceAccount",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind ServiceAccount",
      "nickname": "watchNamespacedServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the ServiceAccount",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/serviceaccounts",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ServiceAccountList",
      "method": "GET",
      "summary": "list or watch objects of kind ServiceAccount",
      "nickname": "listServiceAccount",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceAccountList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/serviceaccounts",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of ServiceAccount",
      "nickname": "watchServiceAccountList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/services",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ServiceList",
      "method": "GET",
      "summary": "list or watch objects of kind Service",
      "nickname": "listNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Service",
      "method": "POST",
      "summary": "create a Service",
      "nickname": "createNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Service",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Service"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/services",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Service",
      "nickname": "watchNamespacedServiceList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/namespaces/{namespace}/services/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.Service",
      "method": "GET",
      "summary": "read the specified Service",
      "nickname": "readNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Service"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Service",
      "method": "PUT",
      "summary": "replace the specified Service",
      "nickname": "replaceNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "v1.Service",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Service"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "v1.Service",
      "method": "PATCH",
      "summary": "partially update the specified Service",
      "nickname": "patchNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "api.Patch",
        "paramType": "body",
        "name": "body",
        "description": "",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Service"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "application/json-patch+json",
       "application/merge-patch+json",
       "application/strategic-merge-patch+json"
      ]
     },
     {
      "type": "v1.Status",
      "method": "DELETE",
      "summary": "delete a Service",
      "nickname": "deleteNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.Status"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/namespaces/{namespace}/services/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch changes to an object of kind Service",
      "nickname": "watchNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/namespaces/{namespace}/services/{name}/{path:*}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Service",
      "nickname": "proxyGETNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Service",
      "nickname": "proxyPUTNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Service",
      "nickname": "proxyPOSTNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Service",
      "nickname": "proxyDELETENamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Service",
      "nickname": "proxyHEADNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Service",
      "nickname": "proxyOPTIONSNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "path:*",
        "description": "path to the resource",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/proxy/namespaces/{namespace}/services/{name}",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "string",
      "method": "GET",
      "summary": "proxy GET requests to Service",
      "nickname": "proxyGETNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "PUT",
      "summary": "proxy PUT requests to Service",
      "nickname": "proxyPUTNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "POST",
      "summary": "proxy POST requests to Service",
      "nickname": "proxyPOSTNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "DELETE",
      "summary": "proxy DELETE requests to Service",
      "nickname": "proxyDELETENamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "HEAD",
      "summary": "proxy HEAD requests to Service",
      "nickname": "proxyHEADNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     },
     {
      "type": "string",
      "method": "OPTIONS",
      "summary": "proxy OPTIONS requests to Service",
      "nickname": "proxyOPTIONSNamespacedService",
      "parameters": [
       {
        "type": "string",
        "paramType": "path",
        "name": "namespace",
        "description": "object name and auth scope, such as for teams and projects",
        "required": true,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "path",
        "name": "name",
        "description": "name of the Service",
        "required": true,
        "allowMultiple": false
       }
      ],
      "produces": [
       "*/*"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/services",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "v1.ServiceList",
      "method": "GET",
      "summary": "list or watch objects of kind Service",
      "nickname": "listService",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "v1.ServiceList"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   },
   {
    "path": "/api/v1/watch/services",
    "description": "API at /api/v1 version v1",
    "operations": [
     {
      "type": "json.WatchEvent",
      "method": "GET",
      "summary": "watch individual changes to a list of Service",
      "nickname": "watchServiceList",
      "parameters": [
       {
        "type": "string",
        "paramType": "query",
        "name": "pretty",
        "description": "If 'true', then the output is pretty printed.",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "labelSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "fieldSelector",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "boolean",
        "paramType": "query",
        "name": "watch",
        "description": "",
        "required": false,
        "allowMultiple": false
       },
       {
        "type": "string",
        "paramType": "query",
        "name": "resourceVersion",
        "description": "",
        "required": false,
        "allowMultiple": false
       }
      ],
      "responseMessages": [
       {
        "code": 200,
        "message": "OK",
        "responseModel": "json.WatchEvent"
       }
      ],
      "produces": [
       "application/json"
      ],
      "consumes": [
       "*/*"
      ]
     }
    ]
   }
  ],
  "models": {
   "v1.Binding": {
    "id": "v1.Binding",
    "required": [
     "target"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "target": {
      "$ref": "v1.ObjectReference"
     }
    }
   },
   "v1.ObjectMeta": {
    "id": "v1.ObjectMeta",
    "properties": {
     "name": {
      "type": "string"
     },
     "generateName": {
      "type": "string"
     },
     "namespace": {
      "type": "string"
     },
     "selfLink": {
      "type": "string"
     },
     "uid": {
      "type": "string"
     },
     "resourceVersion": {
      "type": "string"
     },
     "generation": {
      "type": "integer",
      "format": "int64"
     },
     "creationTimestamp": {
      "type": "string"
     },
     "deletionTimestamp": {
      "type": "string"
     },
     "deletionGracePeriodSeconds": {
      "type": "integer",
      "format": "int64"
     },
     "labels": {
      "type": "any"
     },
     "annotations": {
      "type": "any"
     }
    }
   },
   "v1.ObjectReference": {
    "id": "v1.ObjectReference",
    "properties": {
     "kind": {
      "type": "string"
     },
     "namespace": {
      "type": "string"
     },
     "name": {
      "type": "string"
     },
     "uid": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "resourceVersion": {
      "type": "string"
     },
     "fieldPath": {
      "type": "string"
     }
    }
   },
   "v1.ComponentStatusList": {
    "id": "v1.ComponentStatusList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.ComponentStatus"
      }
     }
    }
   },
   "v1.ListMeta": {
    "id": "v1.ListMeta",
    "properties": {
     "selfLink": {
      "type": "string"
     },
     "resourceVersion": {
      "type": "string"
     }
    }
   },
   "v1.ComponentStatus": {
    "id": "v1.ComponentStatus",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "v1.ComponentCondition"
      }
     }
    }
   },
   "v1.ComponentCondition": {
    "id": "v1.ComponentCondition",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "type": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "error": {
      "type": "string"
     }
    }
   },
   "v1.EndpointsList": {
    "id": "v1.EndpointsList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Endpoints"
      }
     }
    }
   },
   "v1.Endpoints": {
    "id": "v1.Endpoints",
    "required": [
     "subsets"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "subsets": {
      "type": "array",
      "items": {
       "$ref": "v1.EndpointSubset"
      }
     }
    }
   },
   "v1.EndpointSubset": {
    "id": "v1.EndpointSubset",
    "properties": {
     "addresses": {
      "type": "array",
      "items": {
       "$ref": "v1.EndpointAddress"
      }
     },
     "ports": {
      "type": "array",
      "items": {
       "$ref": "v1.EndpointPort"
      }
     }
    }
   },
   "v1.EndpointAddress": {
    "id": "v1.EndpointAddress",
    "required": [
     "ip"
    ],
    "properties": {
     "ip": {
      "type": "string"
     },
     "targetRef": {
      "$ref": "v1.ObjectReference"
     }
    }
   },
   "v1.EndpointPort": {
    "id": "v1.EndpointPort",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "port": {
      "type": "integer",
      "format": "int32"
     },
     "protocol": {
      "type": "string"
     }
    }
   },
   "json.WatchEvent": {
    "id": "json.WatchEvent",
    "properties": {
     "type": {
      "type": "string",
      "description": "the type of watch event; may be ADDED, MODIFIED, DELETED, or ERROR"
     },
     "object": {
      "type": "string",
      "description": "the object being watched; will match the type of the resource endpoint or be a Status object if the type is ERROR"
     }
    }
   },
   "api.Patch": {
    "id": "api.Patch",
    "properties": {}
   },
   "v1.Status": {
    "id": "v1.Status",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "status": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "details": {
      "$ref": "v1.StatusDetails"
     },
     "code": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.StatusDetails": {
    "id": "v1.StatusDetails",
    "properties": {
     "name": {
      "type": "string"
     },
     "kind": {
      "type": "string"
     },
     "causes": {
      "type": "array",
      "items": {
       "$ref": "v1.StatusCause"
      }
     },
     "retryAfterSeconds": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.StatusCause": {
    "id": "v1.StatusCause",
    "properties": {
     "reason": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "field": {
      "type": "string"
     }
    }
   },
   "v1.DeleteOptions": {
    "id": "v1.DeleteOptions",
    "required": [
     "gracePeriodSeconds"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "gracePeriodSeconds": {
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.EventList": {
    "id": "v1.EventList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Event"
      }
     }
    }
   },
   "v1.Event": {
    "id": "v1.Event",
    "required": [
     "metadata",
     "involvedObject"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "involvedObject": {
      "$ref": "v1.ObjectReference"
     },
     "reason": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "source": {
      "$ref": "v1.EventSource"
     },
     "firstTimestamp": {
      "type": "string"
     },
     "lastTimestamp": {
      "type": "string"
     },
     "count": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.EventSource": {
    "id": "v1.EventSource",
    "properties": {
     "component": {
      "type": "string"
     },
     "host": {
      "type": "string"
     }
    }
   },
   "v1.LimitRangeList": {
    "id": "v1.LimitRangeList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.LimitRange"
      }
     }
    }
   },
   "v1.LimitRange": {
    "id": "v1.LimitRange",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.LimitRangeSpec"
     }
    }
   },
   "v1.LimitRangeSpec": {
    "id": "v1.LimitRangeSpec",
    "required": [
     "limits"
    ],
    "properties": {
     "limits": {
      "type": "array",
      "items": {
       "$ref": "v1.LimitRangeItem"
      }
     }
    }
   },
   "v1.LimitRangeItem": {
    "id": "v1.LimitRangeItem",
    "properties": {
     "type": {
      "type": "string"
     },
     "max": {
      "type": "any"
     },
     "min": {
      "type": "any"
     },
     "default": {
      "type": "any"
     }
    }
   },
   "v1.NamespaceList": {
    "id": "v1.NamespaceList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Namespace"
      }
     }
    }
   },
   "v1.Namespace": {
    "id": "v1.Namespace",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.NamespaceSpec"
     },
     "status": {
      "$ref": "v1.NamespaceStatus"
     }
    }
   },
   "v1.NamespaceSpec": {
    "id": "v1.NamespaceSpec",
    "properties": {
     "finalizers": {
      "type": "array",
      "items": {
       "$ref": "v1.FinalizerName"
      }
     }
    }
   },
   "v1.FinalizerName": {
    "id": "v1.FinalizerName",
    "properties": {}
   },
   "v1.NamespaceStatus": {
    "id": "v1.NamespaceStatus",
    "properties": {
     "phase": {
      "type": "string"
     }
    }
   },
   "v1.NodeList": {
    "id": "v1.NodeList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Node"
      }
     }
    }
   },
   "v1.Node": {
    "id": "v1.Node",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.NodeSpec"
     },
     "status": {
      "$ref": "v1.NodeStatus"
     }
    }
   },
   "v1.NodeSpec": {
    "id": "v1.NodeSpec",
    "properties": {
     "podCIDR": {
      "type": "string"
     },
     "externalID": {
      "type": "string"
     },
     "providerID": {
      "type": "string"
     },
     "unschedulable": {
      "type": "boolean"
     }
    }
   },
   "v1.NodeStatus": {
    "id": "v1.NodeStatus",
    "properties": {
     "capacity": {
      "type": "any"
     },
     "phase": {
      "type": "string"
     },
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "v1.NodeCondition"
      }
     },
     "addresses": {
      "type": "array",
      "items": {
       "$ref": "v1.NodeAddress"
      }
     },
     "nodeInfo": {
      "$ref": "v1.NodeSystemInfo"
     }
    }
   },
   "v1.NodeCondition": {
    "id": "v1.NodeCondition",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "type": {
      "type": "string"
     },
     "status": {
      "type": "string"
     },
     "lastHeartbeatTime": {
      "type": "string"
     },
     "lastTransitionTime": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "message": {
      "type": "string"
     }
    }
   },
   "v1.NodeAddress": {
    "id": "v1.NodeAddress",
    "required": [
     "type",
     "address"
    ],
    "properties": {
     "type": {
      "type": "string"
     },
     "address": {
      "type": "string"
     }
    }
   },
   "v1.NodeSystemInfo": {
    "id": "v1.NodeSystemInfo",
    "required": [
     "machineID",
     "systemUUID",
     "bootID",
     "kernelVersion",
     "osImage",
     "containerRuntimeVersion",
     "kubeletVersion",
     "kubeProxyVersion"
    ],
    "properties": {
     "machineID": {
      "type": "string"
     },
     "systemUUID": {
      "type": "string"
     },
     "bootID": {
      "type": "string"
     },
     "kernelVersion": {
      "type": "string"
     },
     "osImage": {
      "type": "string"
     },
     "containerRuntimeVersion": {
      "type": "string"
     },
     "kubeletVersion": {
      "type": "string"
     },
     "kubeProxyVersion": {
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeClaimList": {
    "id": "v1.PersistentVolumeClaimList",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.PersistentVolumeClaim"
      }
     }
    }
   },
   "v1.PersistentVolumeClaim": {
    "id": "v1.PersistentVolumeClaim",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.PersistentVolumeClaimSpec"
     },
     "status": {
      "$ref": "v1.PersistentVolumeClaimStatus"
     }
    }
   },
   "v1.PersistentVolumeClaimSpec": {
    "id": "v1.PersistentVolumeClaimSpec",
    "properties": {
     "accessModes": {
      "type": "array",
      "items": {
       "$ref": "v1.PersistentVolumeAccessMode"
      }
     },
     "resources": {
      "$ref": "v1.ResourceRequirements"
     },
     "volumeName": {
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeAccessMode": {
    "id": "v1.PersistentVolumeAccessMode",
    "properties": {}
   },
   "v1.ResourceRequirements": {
    "id": "v1.ResourceRequirements",
    "properties": {
     "limits": {
      "type": "any"
     },
     "requests": {
      "type": "any"
     }
    }
   },
   "v1.PersistentVolumeClaimStatus": {
    "id": "v1.PersistentVolumeClaimStatus",
    "properties": {
     "phase": {
      "type": "string"
     },
     "accessModes": {
      "type": "array",
      "items": {
       "$ref": "v1.PersistentVolumeAccessMode"
      }
     },
     "capacity": {
      "type": "any"
     }
    }
   },
   "v1.PersistentVolumeList": {
    "id": "v1.PersistentVolumeList",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.PersistentVolume"
      }
     }
    }
   },
   "v1.PersistentVolume": {
    "id": "v1.PersistentVolume",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.PersistentVolumeSpec"
     },
     "status": {
      "$ref": "v1.PersistentVolumeStatus"
     }
    }
   },
   "v1.PersistentVolumeSpec": {
    "id": "v1.PersistentVolumeSpec",
    "properties": {
     "capacity": {
      "type": "any"
     },
     "gcePersistentDisk": {
      "$ref": "v1.GCEPersistentDiskVolumeSource"
     },
     "awsElasticBlockStore": {
      "$ref": "v1.AWSElasticBlockStoreVolumeSource"
     },
     "hostPath": {
      "$ref": "v1.HostPathVolumeSource"
     },
     "glusterfs": {
      "$ref": "v1.GlusterfsVolumeSource"
     },
     "nfs": {
      "$ref": "v1.NFSVolumeSource"
     },
     "rbd": {
      "$ref": "v1.RBDVolumeSource"
     },
     "iscsi": {
      "$ref": "v1.ISCSIVolumeSource"
     },
     "accessModes": {
      "type": "array",
      "items": {
       "$ref": "v1.PersistentVolumeAccessMode"
      }
     },
     "claimRef": {
      "$ref": "v1.ObjectReference"
     },
     "persistentVolumeReclaimPolicy": {
      "type": "string"
     }
    }
   },
   "v1.GCEPersistentDiskVolumeSource": {
    "id": "v1.GCEPersistentDiskVolumeSource",
    "required": [
     "pdName",
     "fsType"
    ],
    "properties": {
     "pdName": {
      "type": "string"
     },
     "fsType": {
      "type": "string"
     },
     "partition": {
      "type": "integer",
      "format": "int32"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.AWSElasticBlockStoreVolumeSource": {
    "id": "v1.AWSElasticBlockStoreVolumeSource",
    "required": [
     "volumeID",
     "fsType"
    ],
    "properties": {
     "volumeID": {
      "type": "string"
     },
     "fsType": {
      "type": "string"
     },
     "partition": {
      "type": "integer",
      "format": "int32"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.HostPathVolumeSource": {
    "id": "v1.HostPathVolumeSource",
    "required": [
     "path"
    ],
    "properties": {
     "path": {
      "type": "string"
     }
    }
   },
   "v1.GlusterfsVolumeSource": {
    "id": "v1.GlusterfsVolumeSource",
    "required": [
     "endpoints",
     "path"
    ],
    "properties": {
     "endpoints": {
      "type": "string"
     },
     "path": {
      "type": "string"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.NFSVolumeSource": {
    "id": "v1.NFSVolumeSource",
    "required": [
     "server",
     "path"
    ],
    "properties": {
     "server": {
      "type": "string"
     },
     "path": {
      "type": "string"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.RBDVolumeSource": {
    "id": "v1.RBDVolumeSource",
    "required": [
     "monitors",
     "image",
     "pool",
     "user",
     "keyring",
     "secretRef"
    ],
    "properties": {
     "monitors": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "image": {
      "type": "string"
     },
     "fsType": {
      "type": "string"
     },
     "pool": {
      "type": "string"
     },
     "user": {
      "type": "string"
     },
     "keyring": {
      "type": "string"
     },
     "secretRef": {
      "$ref": "v1.LocalObjectReference"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.LocalObjectReference": {
    "id": "v1.LocalObjectReference",
    "properties": {
     "name": {
      "type": "string"
     }
    }
   },
   "v1.ISCSIVolumeSource": {
    "id": "v1.ISCSIVolumeSource",
    "required": [
     "targetPortal",
     "iqn",
     "lun",
     "fsType"
    ],
    "properties": {
     "targetPortal": {
      "type": "string"
     },
     "iqn": {
      "type": "string"
     },
     "lun": {
      "type": "integer",
      "format": "int32"
     },
     "fsType": {
      "type": "string"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.PersistentVolumeStatus": {
    "id": "v1.PersistentVolumeStatus",
    "properties": {
     "phase": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     }
    }
   },
   "v1.PodList": {
    "id": "v1.PodList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Pod"
      }
     }
    }
   },
   "v1.Pod": {
    "id": "v1.Pod",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.PodSpec"
     },
     "status": {
      "$ref": "v1.PodStatus"
     }
    }
   },
   "v1.PodSpec": {
    "id": "v1.PodSpec",
    "required": [
     "containers"
    ],
    "properties": {
     "volumes": {
      "type": "array",
      "items": {
       "$ref": "v1.Volume"
      }
     },
     "containers": {
      "type": "array",
      "items": {
       "$ref": "v1.Container"
      }
     },
     "restartPolicy": {
      "type": "string"
     },
     "terminationGracePeriodSeconds": {
      "type": "integer",
      "format": "int64"
     },
     "activeDeadlineSeconds": {
      "type": "integer",
      "format": "int64"
     },
     "dnsPolicy": {
      "type": "string"
     },
     "nodeSelector": {
      "type": "any"
     },
     "serviceAccountName": {
      "type": "string"
     },
     "serviceAccount": {
      "type": "string"
     },
     "nodeName": {
      "type": "string"
     },
     "hostNetwork": {
      "type": "boolean"
     },
     "imagePullSecrets": {
      "type": "array",
      "items": {
       "$ref": "v1.LocalObjectReference"
      }
     }
    }
   },
   "v1.Volume": {
    "id": "v1.Volume",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "hostPath": {
      "$ref": "v1.HostPathVolumeSource"
     },
     "emptyDir": {
      "$ref": "v1.EmptyDirVolumeSource"
     },
     "gcePersistentDisk": {
      "$ref": "v1.GCEPersistentDiskVolumeSource"
     },
     "awsElasticBlockStore": {
      "$ref": "v1.AWSElasticBlockStoreVolumeSource"
     },
     "gitRepo": {
      "$ref": "v1.GitRepoVolumeSource"
     },
     "secret": {
      "$ref": "v1.SecretVolumeSource"
     },
     "nfs": {
      "$ref": "v1.NFSVolumeSource"
     },
     "iscsi": {
      "$ref": "v1.ISCSIVolumeSource"
     },
     "glusterfs": {
      "$ref": "v1.GlusterfsVolumeSource"
     },
     "persistentVolumeClaim": {
      "$ref": "v1.PersistentVolumeClaimVolumeSource"
     },
     "rbd": {
      "$ref": "v1.RBDVolumeSource"
     }
    }
   },
   "v1.EmptyDirVolumeSource": {
    "id": "v1.EmptyDirVolumeSource",
    "properties": {
     "medium": {
      "type": "string"
     }
    }
   },
   "v1.GitRepoVolumeSource": {
    "id": "v1.GitRepoVolumeSource",
    "required": [
     "repository",
     "revision"
    ],
    "properties": {
     "repository": {
      "type": "string"
     },
     "revision": {
      "type": "string"
     }
    }
   },
   "v1.SecretVolumeSource": {
    "id": "v1.SecretVolumeSource",
    "required": [
     "secretName"
    ],
    "properties": {
     "secretName": {
      "type": "string"
     }
    }
   },
   "v1.PersistentVolumeClaimVolumeSource": {
    "id": "v1.PersistentVolumeClaimVolumeSource",
    "required": [
     "claimName"
    ],
    "properties": {
     "claimName": {
      "type": "string"
     },
     "readOnly": {
      "type": "boolean"
     }
    }
   },
   "v1.Container": {
    "id": "v1.Container",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "image": {
      "type": "string"
     },
     "command": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "args": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "workingDir": {
      "type": "string"
     },
     "ports": {
      "type": "array",
      "items": {
       "$ref": "v1.ContainerPort"
      }
     },
     "env": {
      "type": "array",
      "items": {
       "$ref": "v1.EnvVar"
      }
     },
     "resources": {
      "$ref": "v1.ResourceRequirements"
     },
     "volumeMounts": {
      "type": "array",
      "items": {
       "$ref": "v1.VolumeMount"
      }
     },
     "livenessProbe": {
      "$ref": "v1.Probe"
     },
     "readinessProbe": {
      "$ref": "v1.Probe"
     },
     "lifecycle": {
      "$ref": "v1.Lifecycle"
     },
     "terminationMessagePath": {
      "type": "string"
     },
     "imagePullPolicy": {
      "type": "string"
     },
     "securityContext": {
      "$ref": "v1.SecurityContext"
     },
     "stdin": {
      "type": "boolean"
     },
     "tty": {
      "type": "boolean"
     }
    }
   },
   "v1.ContainerPort": {
    "id": "v1.ContainerPort",
    "required": [
     "containerPort"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "hostPort": {
      "type": "integer",
      "format": "int32"
     },
     "containerPort": {
      "type": "integer",
      "format": "int32"
     },
     "protocol": {
      "type": "string"
     },
     "hostIP": {
      "type": "string"
     }
    }
   },
   "v1.EnvVar": {
    "id": "v1.EnvVar",
    "required": [
     "name"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "value": {
      "type": "string"
     },
     "valueFrom": {
      "$ref": "v1.EnvVarSource"
     }
    }
   },
   "v1.EnvVarSource": {
    "id": "v1.EnvVarSource",
    "required": [
     "fieldRef"
    ],
    "properties": {
     "fieldRef": {
      "$ref": "v1.ObjectFieldSelector"
     }
    }
   },
   "v1.ObjectFieldSelector": {
    "id": "v1.ObjectFieldSelector",
    "required": [
     "fieldPath"
    ],
    "properties": {
     "apiVersion": {
      "type": "string"
     },
     "fieldPath": {
      "type": "string"
     }
    }
   },
   "v1.VolumeMount": {
    "id": "v1.VolumeMount",
    "required": [
     "name",
     "mountPath"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "readOnly": {
      "type": "boolean"
     },
     "mountPath": {
      "type": "string"
     }
    }
   },
   "v1.Probe": {
    "id": "v1.Probe",
    "properties": {
     "exec": {
      "$ref": "v1.ExecAction"
     },
     "httpGet": {
      "$ref": "v1.HTTPGetAction"
     },
     "tcpSocket": {
      "$ref": "v1.TCPSocketAction"
     },
     "initialDelaySeconds": {
      "type": "integer",
      "format": "int64"
     },
     "timeoutSeconds": {
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.ExecAction": {
    "id": "v1.ExecAction",
    "properties": {
     "command": {
      "type": "array",
      "items": {
       "type": "string"
      }
     }
    }
   },
   "v1.HTTPGetAction": {
    "id": "v1.HTTPGetAction",
    "required": [
     "port"
    ],
    "properties": {
     "path": {
      "type": "string"
     },
     "port": {
      "type": "string"
     },
     "host": {
      "type": "string"
     },
     "scheme": {
      "type": "string"
     }
    }
   },
   "v1.TCPSocketAction": {
    "id": "v1.TCPSocketAction",
    "required": [
     "port"
    ],
    "properties": {
     "port": {
      "type": "string"
     }
    }
   },
   "v1.Lifecycle": {
    "id": "v1.Lifecycle",
    "properties": {
     "postStart": {
      "$ref": "v1.Handler"
     },
     "preStop": {
      "$ref": "v1.Handler"
     }
    }
   },
   "v1.Handler": {
    "id": "v1.Handler",
    "properties": {
     "exec": {
      "$ref": "v1.ExecAction"
     },
     "httpGet": {
      "$ref": "v1.HTTPGetAction"
     },
     "tcpSocket": {
      "$ref": "v1.TCPSocketAction"
     }
    }
   },
   "v1.SecurityContext": {
    "id": "v1.SecurityContext",
    "properties": {
     "capabilities": {
      "$ref": "v1.Capabilities"
     },
     "privileged": {
      "type": "boolean"
     },
     "seLinuxOptions": {
      "$ref": "v1.SELinuxOptions"
     },
     "runAsUser": {
      "type": "integer",
      "format": "int64"
     },
     "runAsNonRoot": {
      "type": "boolean"
     }
    }
   },
   "v1.Capabilities": {
    "id": "v1.Capabilities",
    "properties": {
     "add": {
      "type": "array",
      "items": {
       "$ref": "v1.Capability"
      }
     },
     "drop": {
      "type": "array",
      "items": {
       "$ref": "v1.Capability"
      }
     }
    }
   },
   "v1.Capability": {
    "id": "v1.Capability",
    "properties": {}
   },
   "v1.SELinuxOptions": {
    "id": "v1.SELinuxOptions",
    "properties": {
     "user": {
      "type": "string"
     },
     "role": {
      "type": "string"
     },
     "type": {
      "type": "string"
     },
     "level": {
      "type": "string"
     }
    }
   },
   "v1.PodStatus": {
    "id": "v1.PodStatus",
    "properties": {
     "phase": {
      "type": "string"
     },
     "conditions": {
      "type": "array",
      "items": {
       "$ref": "v1.PodCondition"
      }
     },
     "message": {
      "type": "string"
     },
     "reason": {
      "type": "string"
     },
     "hostIP": {
      "type": "string"
     },
     "podIP": {
      "type": "string"
     },
     "startTime": {
      "type": "string"
     },
     "containerStatuses": {
      "type": "array",
      "items": {
       "$ref": "v1.ContainerStatus"
      }
     }
    }
   },
   "v1.PodCondition": {
    "id": "v1.PodCondition",
    "required": [
     "type",
     "status"
    ],
    "properties": {
     "type": {
      "type": "string"
     },
     "status": {
      "type": "string"
     }
    }
   },
   "v1.ContainerStatus": {
    "id": "v1.ContainerStatus",
    "required": [
     "name",
     "ready",
     "restartCount",
     "image",
     "imageID"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "state": {
      "$ref": "v1.ContainerState"
     },
     "lastState": {
      "$ref": "v1.ContainerState"
     },
     "ready": {
      "type": "boolean"
     },
     "restartCount": {
      "type": "integer",
      "format": "int32"
     },
     "image": {
      "type": "string"
     },
     "imageID": {
      "type": "string"
     },
     "containerID": {
      "type": "string"
     }
    }
   },
   "v1.ContainerState": {
    "id": "v1.ContainerState",
    "properties": {
     "waiting": {
      "$ref": "v1.ContainerStateWaiting"
     },
     "running": {
      "$ref": "v1.ContainerStateRunning"
     },
     "terminated": {
      "$ref": "v1.ContainerStateTerminated"
     }
    }
   },
   "v1.ContainerStateWaiting": {
    "id": "v1.ContainerStateWaiting",
    "properties": {
     "reason": {
      "type": "string"
     }
    }
   },
   "v1.ContainerStateRunning": {
    "id": "v1.ContainerStateRunning",
    "properties": {
     "startedAt": {
      "type": "string"
     }
    }
   },
   "v1.ContainerStateTerminated": {
    "id": "v1.ContainerStateTerminated",
    "required": [
     "exitCode"
    ],
    "properties": {
     "exitCode": {
      "type": "integer",
      "format": "int32"
     },
     "signal": {
      "type": "integer",
      "format": "int32"
     },
     "reason": {
      "type": "string"
     },
     "message": {
      "type": "string"
     },
     "startedAt": {
      "type": "string"
     },
     "finishedAt": {
      "type": "string"
     },
     "containerID": {
      "type": "string"
     }
    }
   },
   "v1.PodTemplateList": {
    "id": "v1.PodTemplateList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.PodTemplate"
      }
     }
    }
   },
   "v1.PodTemplate": {
    "id": "v1.PodTemplate",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "template": {
      "$ref": "v1.PodTemplateSpec"
     }
    }
   },
   "v1.PodTemplateSpec": {
    "id": "v1.PodTemplateSpec",
    "properties": {
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.PodSpec"
     }
    }
   },
   "v1.ReplicationControllerList": {
    "id": "v1.ReplicationControllerList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.ReplicationController"
      }
     }
    }
   },
   "v1.ReplicationController": {
    "id": "v1.ReplicationController",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.ReplicationControllerSpec"
     },
     "status": {
      "$ref": "v1.ReplicationControllerStatus"
     }
    }
   },
   "v1.ReplicationControllerSpec": {
    "id": "v1.ReplicationControllerSpec",
    "properties": {
     "replicas": {
      "type": "integer",
      "format": "int32"
     },
     "selector": {
      "type": "any"
     },
     "template": {
      "$ref": "v1.PodTemplateSpec"
     }
    }
   },
   "v1.ReplicationControllerStatus": {
    "id": "v1.ReplicationControllerStatus",
    "required": [
     "replicas"
    ],
    "properties": {
     "replicas": {
      "type": "integer",
      "format": "int32"
     },
     "observedGeneration": {
      "type": "integer",
      "format": "int64"
     }
    }
   },
   "v1.ResourceQuotaList": {
    "id": "v1.ResourceQuotaList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.ResourceQuota"
      }
     }
    }
   },
   "v1.ResourceQuota": {
    "id": "v1.ResourceQuota",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.ResourceQuotaSpec"
     },
     "status": {
      "$ref": "v1.ResourceQuotaStatus"
     }
    }
   },
   "v1.ResourceQuotaSpec": {
    "id": "v1.ResourceQuotaSpec",
    "properties": {
     "hard": {
      "type": "any"
     }
    }
   },
   "v1.ResourceQuotaStatus": {
    "id": "v1.ResourceQuotaStatus",
    "properties": {
     "hard": {
      "type": "any"
     },
     "used": {
      "type": "any"
     }
    }
   },
   "v1.SecretList": {
    "id": "v1.SecretList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Secret"
      }
     }
    }
   },
   "v1.Secret": {
    "id": "v1.Secret",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "data": {
      "type": "any"
     },
     "type": {
      "type": "string"
     }
    }
   },
   "v1.ServiceAccountList": {
    "id": "v1.ServiceAccountList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.ServiceAccount"
      }
     }
    }
   },
   "v1.ServiceAccount": {
    "id": "v1.ServiceAccount",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "secrets": {
      "type": "array",
      "items": {
       "$ref": "v1.ObjectReference"
      }
     },
     "imagePullSecrets": {
      "type": "array",
      "items": {
       "$ref": "v1.LocalObjectReference"
      }
     }
    }
   },
   "v1.ServiceList": {
    "id": "v1.ServiceList",
    "required": [
     "items"
    ],
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ListMeta"
     },
     "items": {
      "type": "array",
      "items": {
       "$ref": "v1.Service"
      }
     }
    }
   },
   "v1.Service": {
    "id": "v1.Service",
    "properties": {
     "kind": {
      "type": "string"
     },
     "apiVersion": {
      "type": "string"
     },
     "metadata": {
      "$ref": "v1.ObjectMeta"
     },
     "spec": {
      "$ref": "v1.ServiceSpec"
     },
     "status": {
      "$ref": "v1.ServiceStatus"
     }
    }
   },
   "v1.ServiceSpec": {
    "id": "v1.ServiceSpec",
    "required": [
     "ports"
    ],
    "properties": {
     "ports": {
      "type": "array",
      "items": {
       "$ref": "v1.ServicePort"
      }
     },
     "selector": {
      "type": "any"
     },
     "clusterIP": {
      "type": "string"
     },
     "type": {
      "type": "string"
     },
     "externalIPs": {
      "type": "array",
      "items": {
       "type": "string"
      }
     },
     "sessionAffinity": {
      "type": "string"
     }
    }
   },
   "v1.ServicePort": {
    "id": "v1.ServicePort",
    "required": [
     "port"
    ],
    "properties": {
     "name": {
      "type": "string"
     },
     "protocol": {
      "type": "string"
     },
     "port": {
      "type": "integer",
      "format": "int32"
     },
     "targetPort": {
      "type": "string"
     },
     "nodePort": {
      "type": "integer",
      "format": "int32"
     }
    }
   },
   "v1.ServiceStatus": {
    "id": "v1.ServiceStatus",
    "properties": {
     "loadBalancer": {
      "$ref": "v1.LoadBalancerStatus"
     }
    }
   },
   "v1.LoadBalancerStatus": {
    "id": "v1.LoadBalancerStatus",
    "properties": {
     "ingress": {
      "type": "array",
      "items": {
       "$ref": "v1.LoadBalancerIngress"
      }
     }
    }
   },
   "v1.LoadBalancerIngress": {
    "id": "v1.LoadBalancerIngress",
    "properties": {
     "ip": {
      "type": "string"
     },
     "hostname": {
      "type": "string"
     }
    }
   }
  }
 }